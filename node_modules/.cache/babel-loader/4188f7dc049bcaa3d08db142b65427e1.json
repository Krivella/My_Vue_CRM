{"ast":null,"code":"import useVuelidate from '@vuelidate/core';\nimport { required, email, minLength } from '@vuelidate/validators';\nexport function validMail(mail) {\n  let validMailPattern = new RegExp(\"/^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/\");\n\n  if (validMailPattern.test(mail)) {\n    return true;\n  }\n\n  return false;\n}\nexport default {\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n\n  data() {\n    return {\n      form: {\n        email: '',\n        password: ''\n      }\n    };\n  },\n\n  validations() {\n    return {\n      form: {\n        email: {\n          required,\n          required_validator: {\n            $message: 'Поле не должно быть пустым'\n          }\n        },\n        password: {\n          required,\n          min: minLength(6)\n        }\n      }\n    };\n  },\n\n  methods: {\n    onSubmit() {\n      this.$router.push('/');\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA2CA,OAAOA,YAAP,MAAyB,iBAAzB;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,SAA1B,QAA2C,uBAA3C;AAEA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AAC9B,MAAIC,gBAAe,GAAI,IAAIC,MAAJ,CAAW,+DAAX,CAAvB;;AACA,MAAID,gBAAgB,CAACE,IAAjB,CAAsBH,IAAtB,CAAJ,EAAgC;AAC9B,WAAO,IAAP;AACF;;AACA,SAAO,KAAP;AACF;AAEA,eAAe;AACbI,OAAI,GAAK;AACP,WAAO;AAAEC,QAAE,EAAEV,YAAY;AAAlB,KAAP;AACD,GAHY;;AAKbW,MAAG,GAAK;AACN,WAAO;AACLC,UAAI,EAAE;AACJV,aAAK,EAAE,EADH;AAEJW,gBAAQ,EAAE;AAFN;AADD,KAAP;AAMD,GAZY;;AAabC,aAAU,GAAK;AACb,WAAO;AACLF,UAAI,EAAE;AACJV,aAAK,EAAE;AACLD,kBADK;AACKc,4BAAkB,EAAE;AAC5BC,oBAAQ,EAAE;AADkB;AADzB,SADH;AAMJH,gBAAQ,EAAE;AACRZ,kBADQ;AAERgB,aAAG,EAAEd,SAAS,CAAC,CAAD;AAFN;AANN;AADD,KAAP;AAaD,GA3BY;;AA4Bbe,SAAO,EAAE;AACPC,YAAO,GAAK;AACV,WAAKC,OAAL,CAAaC,IAAb,CAAkB,GAAlB;AACF;;AAHO;AA5BI,CAAf","names":["useVuelidate","required","email","minLength","validMail","mail","validMailPattern","RegExp","test","setup","v$","data","form","password","validations","required_validator","$message","min","methods","onSubmit","$router","push"],"sourceRoot":"","sources":["C:\\vue-crm\\src\\views\\Login-crm.vue"],"sourcesContent":["<template>\r\n  <form class=\"card auth-card\" @submit.prevent=\"onSubmit\">\r\n    <div class=\"card-content\">\r\n    <span class=\"card-title\">Домашняя бухгалтерия</span>\r\n    <div class=\"input-field\" :class=\"{ error: v$.form.email.$errors.length }\">\r\n      <label for=\"\">Email</label>\r\n      <input class=\"form-control\"  type=\"email\" v-model=\"v$.form.email.$model\">\r\n      <div class=\"pre-icon os-icon os-icon-user-male-circle\"></div>\r\n          <!-- error message -->\r\n      <div class=\"input-errors\" v-for=\"(error, index) of v$.form.email.$errors\" :key=\"index\">\r\n        <div class=\"error-msg\">{{ error.$message }}</div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- password -->\r\n    <div class=\"input-field\" :class=\"{ error: v$.form.password.$errors.length }\">\r\n      <label for=\"\">Пароль</label>\r\n      <input class=\"form-control\"  type=\"password\" v-model=\"v$.form.password.$model\">\r\n      <div class=\"pre-icon os-icon os-icon-fingerprint\"></div>\r\n          <!-- error message -->\r\n      <div class=\"input-errors\" v-for=\"(error, index) of v$.form.password.$errors\" :key=\"index\">\r\n        <div class=\"error-msg\">{{ error.$message }}</div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n\r\n    <!-- Submit Button -->\r\n    <div class=\"card-action\">\r\n      <div>\r\n      <button class=\"btn waves-effect waves-light auth-submit\"\r\n      type=\"submit\"\r\n      :disabled=\"v$.form.$invalid\">Войти<i class=\"material-icons right\">send</i></button>\r\n      </div>\r\n    <p class=\"center\">\r\n        Нет аккаунта?\r\n        <a href=\"/\">Зарегистрироваться</a>\r\n    </p>\r\n    </div>\r\n\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport useVuelidate from '@vuelidate/core'\r\nimport { required, email, minLength } from '@vuelidate/validators'\r\n\r\nexport function validMail(mail) {\r\n  let validMailPattern = new RegExp(\"/^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/\");\r\n  if (validMailPattern.test(mail)){\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport default {\r\n  setup () {\r\n    return { v$: useVuelidate() }\r\n  },\r\n\r\n  data () {\r\n    return {\r\n      form: {\r\n        email: '',\r\n        password: ''\r\n      }\r\n    }\r\n  },\r\n  validations () {\r\n    return {\r\n      form: {\r\n        email: {\r\n          required, required_validator: {\r\n            $message: 'Поле не должно быть пустым'\r\n          }\r\n        },\r\n        password: {\r\n          required,\r\n          min: minLength(6)\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    onSubmit () {\r\n      this.$router.push('/')\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}