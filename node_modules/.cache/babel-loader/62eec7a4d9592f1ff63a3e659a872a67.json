{"ast":null,"code":"export default {\n  data: () => ({\n    email: '',\n    password: ''\n  }),\n  methods: {\n    submitHandler() {\n      this.$v.$touch();\n      if (this.$v.$error) return;\n      router.push('/');\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA4CA,eAAe;AACbA,MAAI,EAAE,OAAO;AACXC,SAAK,EAAE,EADI;AAEXC,YAAQ,EAAE;AAFC,GAAP,CADO;AAKbC,SAAO,EAAE;AACPC,iBAAY,GAAK;AACf,WAAKC,EAAL,CAAQC,MAAR;AACA,UAAI,KAAKD,EAAL,CAAQE,MAAZ,EAAoB;AAEpBC,YAAM,CAACC,IAAP,CAAY,GAAZ;AACF;;AANO;AALI,CAAf","names":["data","email","password","methods","submitHandler","$v","$touch","$error","router","push"],"sourceRoot":"","sources":["C:\\vue-crm\\src\\views\\Login-crm.vue"],"sourcesContent":["<template>\r\n    <form class=\"card auth-card\" @submit.prevent = \"submitHandler\">\r\n  <div class=\"card-content\">\r\n    <span class=\"card-title\">Домашняя бухгалтерия</span>\r\n    <div class=\"input-field\">\r\n      <input\r\n          id=\"email\"\r\n          type=\"text\"\r\n          v-model=\"email\"\r\n          :class=\"{invalid: $v.email.$error}\"\r\n      >\r\n      <label for=\"email\">Email</label>\r\n      <small class = \"helper-text invalid\"  v-for=\"(error) of $v.email.$errors\" :key=\"error.$uid\"> {{ printError(error.$validator, error.$params) }}</small>\r\n    </div>\r\n    <div class=\"input-field\">\r\n      <input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          class=\"validate\"\r\n      >\r\n      <label for=\"password\">Пароль</label>\r\n      <small class=\"helper-text invalid\">Password</small>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-action\">\r\n    <div>\r\n      <button\r\n          class=\"btn waves-effect waves-light auth-submit\"\r\n          type=\"submit\"\r\n      >\r\n        Войти\r\n        <i class=\"material-icons right\">send</i>\r\n      </button>\r\n    </div>\r\n\r\n    <p class=\"center\">\r\n      Нет аккаунта?\r\n      <router-link to=\"/register\">Зарегистрироваться</router-link>\r\n    </p>\r\n  </div>\r\n</form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data: () => ({\r\n    email: '',\r\n    password: ''\r\n  }),\r\n  methods: {\r\n    submitHandler () {\r\n      this.$v.$touch()\r\n      if (this.$v.$error) return\r\n\r\n      router.push('/')\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}