{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"error-msg\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass({\n      error: $setup.v$.firstName.$errors.length\n    })\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.state.firstName = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.state.firstName]]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.v$.firstName.$errors, error => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"input-errors\",\n      key: error.$uid\n    }, [_createElementVNode(\"div\", _hoisted_1, _toDisplayString(error.$message), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 2\n  /* CLASS */\n  );\n}","map":{"version":3,"mappings":";;AAISA,OAAK,EAAC;;;uBAHbC,oBAKI,KALJ,EAKI;AALED,SAAK;AAAAE,aAAWC,UAAGC,SAAH,CAAaC,OAAb,CAAqBC;AAAhC;AAKP,GALJ,mBACAC,oBAAiC,OAAjC,EAAiC;+DAAjBC,WAAMJ,YAASK;AAAE,GAAjC;;AAAA,oBAAgBD,WAAMJ,iCACtBH,oBAEMS,SAFN,EAEM,IAFN,EAEMC,YAFoCR,UAAGC,SAAH,CAAaC,OAEjD,EAF2BH,KAA6B,IAAxB;yBAAtCD,oBAEM,KAFN,EAEM;AAFDD,WAAK,EAAC,cAEL;AAF2DY,SAAG,EAAEV,KAAK,CAACW;AAEtE,KAFN,GACEN,oBAAiD,KAAjD,cAAiDO,iBAAvBZ,KAAK,CAACa,QAAiB,CAAjD,EAAwC;AAAA;AAAxC,MADF;GAEM,CAFN;;AAAA,KAFA;;AAAA","names":["class","_createElementBlock","error","$setup","firstName","$errors","length","_createElementVNode","_ctx","$event","_Fragment","_renderList","key","$uid","_toDisplayString","$message"],"sourceRoot":"","sources":["C:\\vue-crm\\src\\views\\Login-crm.vue"],"sourcesContent":["<template>\r\n  <div :class=\"{ error: v$.firstName.$errors.length }\">\r\n  <input v-model=\"state.firstName\">\r\n  <div class=\"input-errors\" v-for=\"error of v$.firstName.$errors\" :key=\"error.$uid\">\r\n    <div class=\"error-msg\">{{ error.$message }}</div>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport useVuelidate from '@vuelidate/core'\r\nimport { required, email } from '@vuelidate/validators'\r\n\r\nexport default {\r\n  setup () {\r\n    return { v$: useVuelidate() }\r\n  },\r\n  data () {\r\n    return {\r\n      firstName: '',\r\n      lastName: '',\r\n      contact: {\r\n        email: ''\r\n      }\r\n    }\r\n  },\r\n  validations () {\r\n    return {\r\n      firstName: { required },\r\n      lastName: { required },\r\n      contact: {\r\n        email: { required, email }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}