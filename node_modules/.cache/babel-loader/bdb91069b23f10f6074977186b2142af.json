{"ast":null,"code":"import useVuelidate from '@vuelidate/core';\nimport { required, email, minLength } from '@vuelidate/validators';\nexport function validName(name) {\n  const validNamePattern = /^[a-zA-Z]+(?:[-'\\\\s][a-zA-Z]+)*$/;\n\n  if (validNamePattern.test(name)) {\n    return true;\n  }\n\n  return false;\n}\nexport function validEmail(email) {\n  const validEmailPattern = /^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\n\n  if (validEmailPattern.test(email)) {\n    return true;\n  }\n\n  return false;\n}\nexport default {\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n\n  data() {\n    return {\n      form: {\n        email: '',\n        password: '',\n        name: '',\n        agree: false\n      }\n    };\n  },\n\n  validations() {\n    return {\n      form: {\n        email: {\n          required,\n          email,\n          email_validation: {\n            $validator: validEmail,\n            $message: 'Неверный формат поля емэйл'\n          }\n        },\n        password: {\n          required,\n          min: minLength(6)\n        },\n        name: {\n          required,\n          name_validation: {\n            $validator: validName,\n            $message: 'Некорректное имя!'\n          }\n        }\n      }\n    };\n  },\n\n  methods: {\n    onSubmit() {\n      const formData = {\n        email: this.email,\n        password: this.password\n      };\n      console.log(formData);\n      this.$router.push('/');\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAyDA,OAAOA,YAAP,MAAyB,iBAAzB;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,SAA1B,QAA2C,uBAA3C;AAEA,OAAO,SAASC,SAAT,CAAoBC,IAApB,EAA0B;AAC/B,QAAMC,gBAAe,GAAI,kCAAzB;;AACA,MAAIA,gBAAgB,CAACC,IAAjB,CAAsBF,IAAtB,CAAJ,EAAiC;AAC/B,WAAO,IAAP;AACF;;AACA,SAAO,KAAP;AACF;AAEA,OAAO,SAASG,UAAT,CAAqBN,KAArB,EAA4B;AACjC,QAAMO,iBAAgB,GAAI,gDAA1B;;AACA,MAAIA,iBAAiB,CAACF,IAAlB,CAAuBL,KAAvB,CAAJ,EAAmC;AACjC,WAAO,IAAP;AACF;;AACA,SAAO,KAAP;AACF;AAEA,eAAe;AACbQ,OAAI,GAAK;AACP,WAAO;AAAEC,QAAE,EAAEX,YAAY;AAAlB,KAAP;AACD,GAHY;;AAKbY,MAAG,GAAK;AACN,WAAO;AACLC,UAAI,EAAE;AACJX,aAAK,EAAE,EADH;AAEJY,gBAAQ,EAAE,EAFN;AAGJT,YAAI,EAAE,EAHF;AAIJU,aAAK,EAAE;AAJH;AADD,KAAP;AAQD,GAdY;;AAebC,aAAU,GAAK;AACb,WAAO;AACLH,UAAI,EAAE;AACJX,aAAK,EAAE;AACLD,kBADK;AAELC,eAFK;AAGLe,0BAAgB,EAAE;AAChBC,sBAAU,EAAEV,UADI;AAEhBW,oBAAQ,EAAE;AAFM;AAHb,SADH;AASJL,gBAAQ,EAAE;AACRb,kBADQ;AAERmB,aAAG,EAAEjB,SAAS,CAAC,CAAD;AAFN,SATN;AAaJE,YAAI,EAAE;AACJJ,kBADI;AAEJoB,yBAAe,EAAE;AACfH,sBAAU,EAAEd,SADG;AAEfe,oBAAQ,EAAE;AAFK;AAFb;AAbF;AADD,KAAP;AAuBD,GAvCY;;AAwCbG,SAAO,EAAE;AACPC,YAAO,GAAK;AACV,YAAMC,QAAO,GAAI;AACftB,aAAK,EAAE,KAAKA,KADG;AAEfY,gBAAQ,EAAE,KAAKA;AAFA,OAAjB;AAIAW,aAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAKG,OAAL,CAAaC,IAAb,CAAkB,GAAlB;AACF;;AARO;AAxCI,CAAf","names":["useVuelidate","required","email","minLength","validName","name","validNamePattern","test","validEmail","validEmailPattern","setup","v$","data","form","password","agree","validations","email_validation","$validator","$message","min","name_validation","methods","onSubmit","formData","console","log","$router","push"],"sourceRoot":"","sources":["C:\\vue-crm\\src\\views\\Register-crm.vue"],"sourcesContent":["<template>\r\n    <form class=\"card auth-card\" @submit.prevent=\"onSubmit\">\r\n  <div class=\"card-content\">\r\n    <span class=\"card-title\">Домашняя бухгалтерия</span>\r\n    <div class=\"input-field\" :class=\"{ error: v$.form.email.$errors.length }\">\r\n      <label for=\"\">Email</label>\r\n      <input class=\"form-control\"  type=\"email\" v-model=\"v$.form.email.$model\">\r\n      <div class=\"pre-icon os-icon os-icon-user-male-circle\"></div>\r\n          <!-- error message -->\r\n      <div class=\"input-errors\" v-for=\"(error, index) of v$.form.email.$errors\" :key=\"index\">\r\n        <div class=\"error-msg\">{{ error.$message }}</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"input-field\" :class=\"{ error: v$.form.password.$errors.length }\">\r\n      <label for=\"\">Пароль</label>\r\n      <input class=\"form-control\"  type=\"password\" v-model=\"v$.form.password.$model\">\r\n      <div class=\"pre-icon os-icon os-icon-fingerprint\"></div>\r\n          <!-- error message -->\r\n      <div class=\"input-errors\" v-for=\"(error, index) of v$.form.password.$errors\" :key=\"index\">\r\n        <div class=\"error-msg\">{{ error.$message }}</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"input-field\">\r\n       <label for=\"\"> Имя</label><input class=\"form-control\"  type=\"text\" v-model=\"v$.form.name.$model\">\r\n          <div class=\"pre-icon os-icon os-icon-user-male-circle\"></div>\r\n          <!-- Error Message -->\r\n          <div class=\"input-errors\" v-for=\"(error, index) of v$.form.name.$errors\" :key=\"index\">\r\n            <div class=\"error-msg\">{{ error.$message }}</div>\r\n          </div>\r\n    </div>\r\n    <p>\r\n      <label>\r\n        <input type=\"checkbox\" />\r\n        <span>С правилами согласен</span>\r\n      </label>\r\n    </p>\r\n  </div>\r\n  <div class=\"card-action\">\r\n    <div>\r\n      <button\r\n          class=\"btn waves-effect waves-light auth-submit\"\r\n          type=\"submit\"\r\n      >\r\n        Зарегистрироваться\r\n        <i class=\"material-icons right\">send</i>\r\n      </button>\r\n    </div>\r\n\r\n    <p class=\"center\">\r\n      Уже есть аккаунт?\r\n      <router-link to=\"/login\">Войти!</router-link>\r\n    </p>\r\n  </div>\r\n</form>\r\n</template>\r\n\r\n<script>\r\nimport useVuelidate from '@vuelidate/core'\r\nimport { required, email, minLength } from '@vuelidate/validators'\r\n\r\nexport function validName (name) {\r\n  const validNamePattern = /^[a-zA-Z]+(?:[-'\\\\s][a-zA-Z]+)*$/\r\n  if (validNamePattern.test(name)) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\nexport function validEmail (email) {\r\n  const validEmailPattern = /^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/\r\n  if (validEmailPattern.test(email)) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\nexport default {\r\n  setup () {\r\n    return { v$: useVuelidate() }\r\n  },\r\n\r\n  data () {\r\n    return {\r\n      form: {\r\n        email: '',\r\n        password: '',\r\n        name: '',\r\n        agree: false\r\n      }\r\n    }\r\n  },\r\n  validations () {\r\n    return {\r\n      form: {\r\n        email: {\r\n          required,\r\n          email,\r\n          email_validation: {\r\n            $validator: validEmail,\r\n            $message: 'Неверный формат поля емэйл'\r\n          }\r\n        },\r\n        password: {\r\n          required,\r\n          min: minLength(6)\r\n        },\r\n        name: {\r\n          required,\r\n          name_validation: {\r\n            $validator: validName,\r\n            $message: 'Некорректное имя!'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    onSubmit () {\r\n      const formData = {\r\n        email: this.email,\r\n        password: this.password\r\n      }\r\n      console.log(formData)\r\n      this.$router.push('/')\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}