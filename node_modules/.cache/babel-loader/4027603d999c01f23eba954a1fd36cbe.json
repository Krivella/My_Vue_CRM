{"ast":null,"code":"import router from \"@/router\";\nimport { required, minLength } from '@vuelidate/validators';\nexport default {\n  name: \"Login-crm\",\n  data: () => ({\n    email: '',\n    password: ''\n  }),\n  validations: () => ({\n    email: {\n      required,\n      minLength: minLength(3)\n    },\n    password: {\n      required,\n      minLength: minLength(6)\n    }\n  }),\n  methods: {\n    submitHandler() {\n      this.$v.$touch();\n      if (this.$v.$error) return;\n      router.push('/');\n    },\n\n    printError($name, $param) {\n      if ($name === 'required') {\n        return 'Поле не должно быть пустым';\n      } else if ($name === 'minLength') {\n        return 'Минимальная длина должна быть ' + $param + ' символов';\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA4CA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,uBAAlC;AAGA,eAAe;AACXC,MAAI,EAAE,WADK;AAEXC,MAAI,EAAE,OAAO;AACTC,SAAK,EAAE,EADE;AAETC,YAAQ,EAAE;AAFD,GAAP,CAFK;AAMXC,aAAW,EAAE,OAAO;AAChBF,SAAK,EAAE;AAACJ,cAAD;AAAWC,eAAS,EAAEA,SAAS,CAAC,CAAD;AAA/B,KADS;AAEhBI,YAAQ,EAAE;AAACL,cAAD;AAAWC,eAAS,EAAEA,SAAS,CAAC,CAAD;AAA/B;AAFM,GAAP,CANF;AAUXM,SAAO,EAAE;AACLC,iBAAa,GAAG;AACZ,WAAKC,EAAL,CAAQC,MAAR;AACA,UAAI,KAAKD,EAAL,CAAQE,MAAZ,EAAoB;AAEpBZ,YAAM,CAACa,IAAP,CAAY,GAAZ;AACH,KANI;;AAQLC,cAAU,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACtB,UAAID,KAAI,KAAM,UAAd,EAA0B;AACtB,eAAO,4BAAP;AACJ,OAFA,MAEO,IAAIA,KAAI,KAAM,WAAd,EAA2B;AAC9B,eAAO,mCAAmCC,MAAnC,GAA4C,WAAnD;AACJ;AACJ;;AAdK;AAVE,CAAf","names":["router","required","minLength","name","data","email","password","validations","methods","submitHandler","$v","$touch","$error","push","printError","$name","$param"],"sourceRoot":"","sources":["C:\\vue-crm\\src\\views\\Login-crm.vue"],"sourcesContent":["<template>\r\n    <form class=\"card auth-card\" @submit.prevent = \"submitHandler\">\r\n  <div class=\"card-content\">\r\n    <span class=\"card-title\">Домашняя бухгалтерия</span>\r\n    <div class=\"input-field\">\r\n      <input\r\n          id=\"email\"\r\n          type=\"text\"\r\n          :class=\"{invalid: $v.login.$error}\"\r\n          v-model=\"email\"\r\n      >\r\n      <label for=\"email\">Email</label>\r\n      <small class = \"helper-text invalid\" v-bind:key v-for=\"(error) of $v.email.$errors\"> {{ printError(error.$validator, error.$params) }}</small>\r\n    </div>\r\n    <div class=\"input-field\">\r\n      <input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          class=\"validate\"\r\n      >\r\n      <label for=\"password\">Пароль</label>\r\n      <small class=\"helper-text invalid\">Password</small>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-action\">\r\n    <div>\r\n      <button\r\n          class=\"btn waves-effect waves-light auth-submit\"\r\n          type=\"submit\"\r\n      >\r\n        Войти\r\n        <i class=\"material-icons right\">send</i>\r\n      </button>\r\n    </div>\r\n\r\n    <p class=\"center\">\r\n      Нет аккаунта?\r\n      <router-link to=\"/register\">Зарегистрироваться</router-link>\r\n    </p>\r\n  </div>\r\n</form>\r\n</template>\r\n\r\n<script>\r\nimport router from \"@/router\";\r\nimport {required, minLength} from '@vuelidate/validators'\r\n\r\n\r\nexport default {\r\n    name: \"Login-crm\",\r\n    data: () => ({\r\n        email: '',\r\n        password: '',\r\n    }),\r\n    validations: () => ({\r\n        email: {required, minLength: minLength(3)},\r\n        password: {required, minLength: minLength(6)}\r\n    }),\r\n    methods: {\r\n        submitHandler() {\r\n            this.$v.$touch()\r\n            if (this.$v.$error) return\r\n\r\n            router.push('/');\r\n        },\r\n\r\n        printError($name, $param) {\r\n            if ($name === 'required') {\r\n                return 'Поле не должно быть пустым'\r\n            } else if ($name === 'minLength') {\r\n                return 'Минимальная длина должна быть ' + $param + ' символов'\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}